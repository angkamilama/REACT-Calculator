{"ast":null,"code":"// import { useState } from \"react\";\n\n// function Buttons() {\n//   const [input, setInput] = useState([]);\n//   const [result, setResult] = useState(\"\");\n//   const ops = [\"+\", \".\", \"-\", \"/\", \"*\"];\n\n//   const buttons = [\n//     { name: \"C\", value: \"C\" },\n//     { name: \"del\", value: \"delete\" },\n//     { name: \"%\", value: \"%\" },\n//     { name: \"OFF\", value: \"OFF\" },\n//     { name: \"7\", value: 7 },\n//     { name: \"8\", value: 8 },\n//     { name: \"9\", value: 9 },\n//     { name: \"/\", value: \"/\" },\n//     { name: \"4\", value: 4 },\n//     { name: \"5\", value: 5 },\n//     { name: \"6\", value: 6 },\n//     { name: \"*\", value: \"*\" },\n//     { name: \"1\", value: 1 },\n//     { name: \"2\", value: 2 },\n//     { name: \"3\", value: 3 },\n//     { name: \"-\", value: \"-\" },\n//     { name: \"0\", value: 0 },\n//     { name: \".\", value: \".\" },\n//     { name: \"=\", value: \"=\" },\n//     { name: \"+\", value: \"+\" },\n//   ];\n\n//   const handleClick = (event) => {\n//     const ang = event.target.value;\n\n//     if ((+ang >= 0 && +ang <= 9) || !input.includes(\".\")) {\n//       console.log(\"its a numer\", +ang);\n//     } else {\n//       console.log(\"it is not a number\", ang);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <div className=\"screen\"></div>\n//       <div className=\"btns\">\n//         {buttons.map((btn) => {\n//           return (\n//             <button\n//               key={btn.name}\n//               value={btn.value}\n//               className=\"btn\"\n//               onClick={handleClick}\n//             >\n//               {btn.name}\n//             </button>\n//           );\n//         })}\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default Buttons;","map":{"version":3,"names":[],"sources":["/Users/angkamilama/Desktop/calculator/src/component/Buttons.js"],"sourcesContent":["// import { useState } from \"react\";\n\n// function Buttons() {\n//   const [input, setInput] = useState([]);\n//   const [result, setResult] = useState(\"\");\n//   const ops = [\"+\", \".\", \"-\", \"/\", \"*\"];\n\n//   const buttons = [\n//     { name: \"C\", value: \"C\" },\n//     { name: \"del\", value: \"delete\" },\n//     { name: \"%\", value: \"%\" },\n//     { name: \"OFF\", value: \"OFF\" },\n//     { name: \"7\", value: 7 },\n//     { name: \"8\", value: 8 },\n//     { name: \"9\", value: 9 },\n//     { name: \"/\", value: \"/\" },\n//     { name: \"4\", value: 4 },\n//     { name: \"5\", value: 5 },\n//     { name: \"6\", value: 6 },\n//     { name: \"*\", value: \"*\" },\n//     { name: \"1\", value: 1 },\n//     { name: \"2\", value: 2 },\n//     { name: \"3\", value: 3 },\n//     { name: \"-\", value: \"-\" },\n//     { name: \"0\", value: 0 },\n//     { name: \".\", value: \".\" },\n//     { name: \"=\", value: \"=\" },\n//     { name: \"+\", value: \"+\" },\n//   ];\n\n//   const handleClick = (event) => {\n//     const ang = event.target.value;\n\n//     if ((+ang >= 0 && +ang <= 9) || !input.includes(\".\")) {\n//       console.log(\"its a numer\", +ang);\n//     } else {\n//       console.log(\"it is not a number\", ang);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <div className=\"screen\"></div>\n//       <div className=\"btns\">\n//         {buttons.map((btn) => {\n//           return (\n//             <button\n//               key={btn.name}\n//               value={btn.value}\n//               className=\"btn\"\n//               onClick={handleClick}\n//             >\n//               {btn.name}\n//             </button>\n//           );\n//         })}\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default Buttons;\n"],"mappings":"AAAA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}